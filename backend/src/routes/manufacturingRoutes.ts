import { Router } from 'express';
import { ManufacturingController } from '../controllers/manufacturingController';
import { validateRequest } from '../middleware/validation';
import { authenticateToken, requireManagerOrAdmin } from '../middleware/auth';
import { 
  createManufacturingOrderSchema, 
  updateManufacturingOrderSchema, 
  manufacturingOrderQuerySchema 
} from '../validators/manufacturingValidators';

const router = Router();

// All routes require authentication
router.use(authenticateToken);

// Dashboard KPIs endpoint
router.get('/dashboard/kpis', ManufacturingController.getDashboardKPIs);

// Auto-Generated Orders tab endpoints
router.get('/auto-generated', ManufacturingController.getAutoGeneratedOrders);
router.patch('/:id/status', requireManagerOrAdmin, ManufacturingController.changeOrderStatus);

// Manufacturing Orders routes
router.post('/', 
  requireManagerOrAdmin, 
  validateRequest(createManufacturingOrderSchema), 
  ManufacturingController.createOrder
);

router.get('/', 
  validateRequest(manufacturingOrderQuerySchema), 
  ManufacturingController.getAllOrders
);

router.get('/stats', ManufacturingController.getStats);

router.get('/:id', ManufacturingController.getOrderById);

router.put('/:id', 
  requireManagerOrAdmin, 
  validateRequest(updateManufacturingOrderSchema), 
  ManufacturingController.updateOrder
);

router.delete('/:id', 
  requireManagerOrAdmin, 
  ManufacturingController.deleteOrder
);

export default router;
